2.
CREATE TABLE APPSTORE_HOTSEARCH_AGRR(
UPDATETIME VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
HOTWORDS VARCHAR ARRAY NOT NULL,
DAY VARCHAR,
CONSTRAINT pk PRIMARY KEY (UPDATETIME, COUNTRY, DEVICE, HOTWORDS)) SALT_BUCKETS = 20;
================================================================

3.创建结果表 来自 APPSTORE_BASE_HOTSEARCH
CREATE TABLE APPSTORE_STATISTIC_HOTSEARCH(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
HOTWORD VARCHAR NOT NULL,
STARTTIME VARCHAR NOT NULL,
ENDTIME VARCHAR,
DURATION INTEGER,
RANKING INTEGER,
CONSTRAINT pk PRIMARY KEY (DAY,COUNTRY,DEVICE,HOTWORD,STARTTIME)) SALT_BUCKETS = 20;

================================================================

4.创建当前Top10搜索app表 来自 es.hotsearch_top100  rowkey中appid改为ranking
CREATE TABLE APPSTORE_TOP10_APP_RESULTS(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
HOTWORD VARCHAR NOT NULL,
RANKING INTEGER NOT NULL,
GENRENAMES VARCHAR,
APPNAME VARCHAR,
APPID VARCHAR,
APPIMG VARCHAR,
COMPANYNAME VARCHAR,
UPDATETIME VARCHAR,
CONSTRAINT pk PRIMARY KEY (DAY, COUNTRY, DEVICE,HOTWORD, RANKING )) SALT_BUCKETS = 20;

================================================================

5.创建联想词表 来自  es.hotsearch_related  &  AppStore_Base_HotSearch   rowkey中的relatedword改为ranking

CREATE TABLE APPSTORE_TOP10_RELATED_HOTSEARCH(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
HOTWORD VARCHAR NOT NULL,
RANKING INTEGER NOT NULL,
UPDATETIME VARCHAR,
SEARCHINDEX INTEGER,
RELATEDWORD VARCHAR,
CONSTRAINT pk PRIMARY KEY (DAY,COUNTRY, DEVICE,HOTWORD, RANKING)) SALT_BUCKETS = 20;
================================================================

######6.app排行表 来自  es.rank_top100  &  es.app_detail
CREATE TABLE APPSTORE.APP_TOP100(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
LISTCATEGORY VARCHAR NOT NULL,
APPCATEGORY VARCHAR NOT NULL,
RANKING INTEGER NOT NULL,
APPID VARCHAR,
APPNAME VARCHAR,
APPIMG VARCHAR,
COMPANYNAME VARCHAR,
UPDATETIME VARCHAR,
CONSTRAINT pk PRIMARY KEY ( DAY, COUNTRY, DEVICE, LISTCATEGORY, APPCATEGORY,RANKING)) SALT_BUCKETS = 20;

================================================================
######7.app排行表 来自  es.rank_top100  &  es.app_detail
CREATE TABLE APPSTORE.APP_CURRENT_TOP100(
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
LISTCATEGORY VARCHAR NOT NULL,
APPCATEGORY VARCHAR NOT NULL,
RANKING INTEGER NOT NULL,
APPID VARCHAR,
APPNAME VARCHAR,
APPIMG VARCHAR,
COMPANYNAME VARCHAR,
UPDATETIME VARCHAR,
CONSTRAINT pk PRIMARY KEY (COUNTRY, DEVICE, LISTCATEGORY, APPCATEGORY,RANKING)) SALT_BUCKETS = 20;
8.搜索指数表 (15个字段)
CREATE TABLE APPSTORE_CURRENT_SEARCHINDEX(
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
HOTWORD VARCHAR NOT NULL,
APPID VARCHAR,
GENRENAMES VARCHAR,
SEARCHINDEX INTEGER,
HOTWORD_RESULTCOUNT INTEGER,
RELATEDWORDS VARCHAR ARRAY,
APPNAME VARCHAR,
APPIMG VARCHAR,
COMPANYNAME VARCHAR,
APPRANKINGCATEGORY VARCHAR ARRAY,
UPDATETIME VARCHAR,
CONSTRAINT pk PRIMARY KEY (COUNTRY, DEVICE,HOTWORD)) SALT_BUCKETS = 20;
ALTER TABLE APPSTORE_CURRENT_SEARCHINDEX ADD APP_RANKING VARCHAR null primary key;

9.关键词覆盖
CREATE TABLE APPSTORE_APP_KEYWORD_COVER(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
APPID VARCHAR NOT NULL,
ALL_RANGE_GTE_8000 INTEGER,
ALL_RANGE_7000_7999 INTEGER,
ALL_RANGE_6000_6999 INTEGER,
ALL_RANGE_5000_5999 INTEGER,
ALL_RANGE_4605_4999 INTEGER,
ALL_RANGE_LT_4605 INTEGER,
TOP3_RANGE_GTE_8000 INTEGER,
TOP3_RANGE_7000_7999 INTEGER,
TOP3_RANGE_6000_6999 INTEGER,
TOP3_RANGE_5000_5999 INTEGER,
TOP3_RANGE_4605_4999 INTEGER,
TOP3_RANGE_LT_4605 INTEGER,
TOP10_RANGE_GTE_8000 INTEGER,
TOP10_RANGE_7000_7999 INTEGER,
TOP10_RANGE_6000_6999 INTEGER,
TOP10_RANGE_5000_5999 INTEGER,
TOP10_RANGE_4605_4999 INTEGER,
TOP10_RANGE_LT_4605 INTEGER,
TOP10_TOTAL INTEGER,
CONSTRAINT pk PRIMARY KEY (DAY, COUNTRY, DEVICE,APPID)) SALT_BUCKETS = 20;

=============================================================================

10.关键词搜索排名
CREATE TABLE APPSTORE_APP_KEYWORD_RANKING(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
APPID VARCHAR NOT NULL,
HOTWORD VARCHAR NOT NULL,
APP_RANKING INTEGER,
SEARCHINDEX INTEGER,
HOTWORD_RESULTCOUNT INTEGER,
UPDATETIME VARCHAR,
CONSTRAINT pk PRIMARY KEY (DAY,COUNTRY,DEVICE,APPID,HOTWORD)) SALT_BUCKETS = 20;

============================================================================

11.
CREATE TABLE APPSTORE_APP_KEYWORD_ON_BOARD_COVER(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
APPID VARCHAR NOT NULL,
TOP10_TOTAL INTEGER,
CONSTRAINT pk PRIMARY KEY (DAY, COUNTRY, DEVICE,APPID)) SALT_BUCKETS = 20;

12.
CREATE TABLE APPSTORE_APP_KEYWORD_ON_BOARD_RANKING(
DAY VARCHAR NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
APPID VARCHAR NOT NULL,
HOTWORD VARCHAR NOT NULL,
HOTWORD_RANKING INTEGER,
UPDATETIME VARCHAR,
CONSTRAINT pk PRIMARY KEY (DAY,COUNTRY,DEVICE,APPID,HOTWORD)) SALT_BUCKETS = 20;


13.关键词搜索上榜记录
CREATE TABLE APPSTORE_APP_KEYWORD_ON_BOARD_AGRR(
UPDATETIME VARCHAR NOT NULL,
APPID VARCHAR  NOT NULL,
COUNTRY VARCHAR NOT NULL,
DEVICE VARCHAR NOT NULL,
HOTWORDS VARCHAR ARRAY NOT NULL,
DAY VARCHAR,
CONSTRAINT pk PRIMARY KEY (UPDATETIME,APPID, COUNTRY, DEVICE, HOTWORDS)) SALT_BUCKETS = 20;







13.生成历史数据的表
  CREATE TABLE APPSTORE_HISTORY_SEARCHINDEX(
  DAY VARCHAR NOT NULL,
  COUNTRY VARCHAR NOT NULL,
  DEVICE VARCHAR NOT NULL,
  HOTWORD VARCHAR NOT NULL,
  APPID VARCHAR,
  GENRENAMES VARCHAR,
  SEARCHINDEX INTEGER,
  HOTWORD_RESULTCOUNT INTEGER,
  RELATEDWORDS VARCHAR ARRAY,
  APPNAME VARCHAR,
  APPIMG VARCHAR,
  COMPANYNAME VARCHAR,
  APPRANKINGCATEGORY VARCHAR ARRAY,
  UPDATETIME VARCHAR,
  CONSTRAINT pk PRIMARY KEY (DAY,COUNTRY, DEVICE,HOTWORD)) SALT_BUCKETS = 20;
  ALTER TABLE APPSTORE_HISTORY_SEARCHINDEX ADD APP_RANKING VARCHAR null primary key;


13.索引表
1）hbase-site.xml 文件配置  ：为了建立二级索引
<property><name>hbase.regionserver.wal.codec</name><value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value></property>
<property><name>hbase.master.loadbalancer.class</name><value>org.apache.phoenix.hbase.index.balancer.IndexLoadBalancer</value></property>
<property><name>hbase.coprocessor.master.classes</name><value>org.apache.phoenix.hbase.index.master.IndexMasterObserver</value></property>
<property><name>hbase.coprocessor.regionserver.classes</name><value>org.apache.hadoop.hbase.regionserver.LocalIndexMerger</value></property>
2）创建二级索引
CREATE LOCAL INDEX APPSTORE_APP_TOP100_APPID_INDEX ON APPSTORE_APP_TOP100 (APPID );
3）查询二级索引
!indexes APPSTORE_APP_TOP100;

